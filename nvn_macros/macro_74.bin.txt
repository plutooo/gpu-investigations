00000000: 00000501     parm $r5              ; r5 = arg1
00000001: 0346c215     read $r2 0xd1b        ; r2 = RAM[0x1B];
00000002: 00000401     parm $r4              ; r4 = arg2
00000003: 017dc061     parmsend maddr 0x5f7  ; write_reg(0x5f7, arg3);
00000004: 01118351     parm $r3 maddr 0x446  ; r3 = arg4;
00000005: 00001841     send $r3              ; write_reg(0x446, arg4);
00000006: 05434021     maddr 0x150d
00000007: 00151410     mov $r4 (and $r2 $r4) ; r4 = r2 & arg2
00000008: 00001a31     parm $r2 send $r3     ; write_reg(0x50d, r3);
00000009: 0002e007     braz $r4 0x14         ;
0000000a: 00001041     send $r2              ; write_reg(0x50e, arg5);
0000000b: 01618021   B maddr 0x586           ; while (r4 != 0) {
0000000c: 00000841     send $r1              ;   write_reg(0x586, r1);
0000000d: 017e0021     maddr 0x5f8           ;   write_reg(0x5f8, r5);
0000000e: 00002841     send $r5
0000000f: 01614071     maddrsend 0x585       ;   write_reg(0x585, 0);
00000010: ffffe411     mov $r4 (add $r4 0xffffffffffffffff)
00000011: 00004211     mov $r2 0x1           ;   r4--;
00000012: fffe6017     branz $r4 0xb         ;   r1 = (r1 & 0xf3ffffff) | (1 << 26);
00000013: d0808912     mov $r1 (extrinsrt $r1 $r2 0x0 0x2 0x1a)
00000014: 01118071   B maddrsend 0x446       ; }
00000015: 014340f1     exit maddrsend 0x50d  ; write_reg(0x446, 0);
00000016: 01438071     maddrsend 0x50e       ; write_reg(0x50d, 0);
                                             ; write_reg(0x50e, 0);
