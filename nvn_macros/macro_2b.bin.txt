00000000: 00000501     parm $r5                 ;
00000001: 0346c215     read $r2 0xd1b           ;
00000002: 00000401     parm $r4                 ;
00000003: 00d74061     parmsend maddr 0x35d     ; write_reg(0x35d, arg3); // ???
00000004: 01438351     parm $r3 maddr 0x50e     ;
00000005: 00001841     send $r3                 ; write_reg(0x50e, arg4);
00000006: 0638c021     maddr 0x18e3             ; r1 = arg0
00000007: 00151410     mov $r4 (and $r2 $r4)    ; r4 = arg2 & RAM[0x1B]
00000008: 01910041     send 0x644               ; write_reg(0x8e3, 1);
00000009: 0002e007     braz $r4 0x14            ; while (r4-- != 0) {
0000000a: 00001841     send $r3                 ;   write_reg(0x8e4, arg4);
0000000b: 01618021   B maddr 0x586              ;   write_reg(0x586, r1);
0000000c: 00000841     send $r1                 ;   write_reg(0x35e, arg1);
0000000d: 00d78021     maddr 0x35e
0000000e: 00002841     send $r5
0000000f: 01614071     maddrsend 0x585          ;   write_reg(0x585, 0);
00000010: ffffe411     mov $r4 (add $r4 0xffffffffffffffff)
00000011: 00004211     mov $r2 0x1              ;
00000012: fffe6017     branz $r4 0xb            ;   r1 = (r1 & 0xf3ffffff) | (1 << 26);
00000013: d0808912     mov $r1 (extrinsrt $r1 $r2 0x0 0x2 0x1a)
00000014: 01438071   B maddrsend 0x50e          ;   write_reg(0x50e, 0);
                                                ; }
00000015: 0638c021     maddr 0x18e3             ; write_reg(0xe3, 0x644);
00000016: 019100c1     exit send 0x644          ; write_reg(0xe4, 0);
00000017: 00000041     send 0x0
