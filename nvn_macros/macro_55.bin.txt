00000000: 00000601     parm $r6                ; r6 = arg1
00000001: 00000501     parm $r5                ; r5 = arg2
00000002: 0346c215     read $r2 0xd1b          ; r2 = RAM[0x1B];
00000003: 017dc061     parmsend maddr 0x5f7    ; write_reg(0x5f7, arg3);
00000004: 01118451     parm $r4 maddr 0x446    ; r4 = arg4;
00000005: 00002041     send $r4                ; write_reg(0x446, arg4);
00000006: 05434021     maddr 0x150d
00000007: 00002331     parm $r3 send $r4       ; write_reg(0x50d, arg4);
00000008: 00001841     send $r3                ; write_reg(0x50e, arg5);
00000009: 0638c021     maddr 0x18e3
0000000a: 01900041     send 0x640              ; write_reg(0x8e3, 0x640);
0000000b: 00155510     mov $r5 (and $r2 $r5)   ; r5 = (r5 & r2);
0000000c: 00002041     send $r4                ; write_reg(0x8e4, arg4);
0000000d: 0002e807     braz $r5 0x18           ; write_reg(0x8e5, arg5);
0000000e: 00001841     send $r3
0000000f: 01618021   B maddr 0x586             ; while (r5 != 0) {
00000010: 00000841     send $r1                ;   write_reg(0x586, r1);
00000011: 017e0021     maddr 0x5f8
00000012: 00003041     send $r6                ;   write_reg(0x5f8, r6);
00000013: 01614071     maddrsend 0x585         ;   write_reg(0x585, 0);
00000014: ffffed11     mov $r5 (add $r5 0xffffffffffffffff)
00000015: 00004211     mov $r2 0x1             ;   r5--;
00000016: fffe6817     branz $r5 0xf           ;   r1 = (r1 & 0xf3ffffff) | (1 << 26);
00000017: d0808912     mov $r1 (extrinsrt $r1 $r2 0x0 0x2 0x1a)
00000018: 01118071   B maddrsend 0x446         ; }
00000019: 01434071     maddrsend 0x50d         ; write_reg(0x446, 0);
0000001a: 01438071     maddrsend 0x50e         ; write_reg(0x50d, 0);
0000001b: 0638c021     maddr 0x18e3            ; write_reg(0x50e, 0);
0000001c: 01900041     send 0x640              ; write_reg(0x8e3, 0x640);
0000001d: 000000c1     exit send 0x0           ; write_reg(0x8e4, 0);
0000001e: 00000041     send 0x0                ; write_reg(0x8e5, 0);
