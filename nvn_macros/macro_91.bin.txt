00000000: 0346c215     read $r2 0xd1b         ; r2 = RAM[0x1B];
00000001: 00000e11     mov $r6 $r1            ; r6 = arg0;
00000002: 00000501     parm $r5               ; r5 = arg1;
00000003: 00000101     parm $r1               ; r1 = arg2;
00000004: 03420021     maddr 0xd08
00000005: 00000841     send $r1               ; RAM[8] = arg2;
00000006: 00000401     parm $r4               ; r4 = arg3; r7 = arg4;
00000007: 00011017     branz $r2 0xb          ; if (r2 == 0) {
00000008: 00000701     parm $r7               ;   JUMPOUT(0x45);
00000009: 000f0007     bra 0x45               ; }
0000000a: 0005ad10     mov $r5 (sub $r5 $r6)  ; r5 -= r6;
0000000b: 0005ea10   B mov $r2 (sub $r5 $r7)  ; r2 = r5 - r7;
0000000c: f87e8212     mov $r2 (extrinsrt 0x0 $r2 0x1f 0x1 0x1f)
0000000d: 00009027     braz annul $r2 0xf     ; if (r2 & 0x80000000)
0000000e: 00002f11     mov $r7 $r5            ;   r7 = r5;
0000000f: 0005f210   B mov $r2 (sub $r6 $r7)  ; r2 = r6 - r7;
00000010: f87e8212     mov $r2 (extrinsrt 0x0 $r2 0x1f 0x1 0x1f)
00000011: 000cd027     braz annul $r2 0x44    ; if (r2 & 0x80000000) {
00000012: 03420115     read $r1 0xd08         ;   r1 = RAM[8]; // arg2
00000013: 0005ed10     mov $r5 (sub $r5 $r7)  ;   r5 -= r7;
00000014: 00004211     mov $r2 0x1            ;   r2 = 1;
00000015: 03424021     maddr 0xd09
00000016: d0808912     mov $r1 (extrinsrt $r1 $r2 0x0 0x2 0x1a)
00000017: 00000841     send $r1               ;   RAM[9] = (r1 & 0xf3ffffff) | (1 << 26);
00000018: 0005f210   B mov $r2 (sub $r6 $r7)  ;   r2 = r6 - r7;
00000019: 00091027     braz annul $r2 0x3d    ; 
0000001a: 00000301     parm $r3               ;   while (r6 != r7) {
0000001b: 00000201     parm $r2               ;     r3 = read_arg();
0000001c: 00d74061     parmsend maddr 0x35d   ;     r2 = read_arg();
0000001d: 01438151     parm $r1 maddr 0x50e   ;     write_reg(0x35d, read_arg());
0000001e: 00000841     send $r1               ;     r1 = read_arg();
0000001f: 0638c021     maddr 0x18e3           ;     write_reg(0x50e, r1);
00000020: 01910041     send 0x644             ;     write_reg(0x8e3, 0x644);
00000021: 00000841     send $r1               ;     write_reg(0x644, r1);
00000022: 00049007     braz $r2 0x34          ;     if (r2 != 0) {
00000023: 00003041     send $r6               ;       write_reg(0x644, r6);
00000024: 03420115     read $r1 0xd08         ;     }
00000025: 01618021     maddr 0x586            ;     r1 = RAM[8];
00000026: 00000841     send $r1               ;     write_reg(0x586, r1);
00000027: 00d78021     maddr 0x35e            ;     r2--;
00000028: ffffd211     mov $r2 (add $r2 0xffffffffffffffff)
00000029: 00001841     send $r3               ;     write_reg(0x35e, r3);
0000002a: 00029007     braz $r2 0x34          ;
0000002b: 01614071     maddrsend 0x585        ;     write_reg(0x585, 0);
                                              ;     while (r2 != 0) {
0000002c: 03424115   B read $r1 0xd09         ;       r1 = RAM[9];
0000002d: 01618021     maddr 0x586            ;       write_reg(0x586, r1);
0000002e: 00000841     send $r1               ;       r2--;
0000002f: 00d78021     maddr 0x35e            ;       write_reg(0x35e, r3);
00000030: ffffd211     mov $r2 (add $r2 0xffffffffffffffff)
00000031: 00001841     send $r3               ;       write_reg(0x585, 0);
00000032: fffe9017     branz $r2 0x2c         ;
00000033: 01614071     maddrsend 0x585        ;     }
00000034: fff92007   B braz $r4 0x18          ;     if (r4 == 0) continue;
00000035: 00007611     mov $r6 (add $r6 0x1)  ;     r6++;
00000036: 0005f210     mov $r2 (sub $r6 $r7)  ;     r2 = r6 - r7;
00000037: fff85027     braz annul $r2 0x18    ;     if (r2 == 0) continue;
00000038: 00002211     mov $r2 $r4            ;     r2 = r4;
00000039: ffffd211   B mov $r2 (add $r2 0xffffffffffffffff)
0000003a: ffffd017     branz $r2 0x39         ;     while(r2--) r1 = read_arg();
0000003b: 00000101     parm $r1
0000003c: fff70027     bra annul 0x18         ;   }
0000003d: 00022027   B braz annul $r4 0x45    ;   if (r4 != 0 || r5 != 0) {
0000003e: 0001e827     braz annul $r5 0x45    ;     r2 = r4;
0000003f: 00002211     mov $r2 $r4            ;
00000040: ffffd211   B mov $r2 (add $r2 0xffffffffffffffff)
00000041: ffffd017     branz $r2 0x40         ;     while(r2--) r1 = read_arg();   
00000042: 00000101     parm $r1
00000043: 00008027     bra annul 0x45         ;   }
00000044: 0005ad10   B mov $r5 (sub $r5 $r6)  ; } else { r5 -= r6; }
00000045: 00036827   B braz annul $r5 0x52    ; while (r5 != 0) {
00000046: 00000101   B parm $r1               ;   r1 = read_arg();
00000047: 00000101     parm $r1               ;   r1 = read_arg();
00000048: 00000101     parm $r1               ;   r1 = read_arg();
00000049: ffffed11     mov $r5 (add $r5 0xffffffffffffffff)
0000004a: 0001e007     braz $r4 0x51          ;   r5--;
0000004b: 00000101     parm $r1               ;   if (r4 != 0 || r5 != 0)
0000004c: 00016827     braz annul $r5 0x51    ;     r1 = read_arg();
0000004d: 00002211     mov $r2 $r4            ;   else {
0000004e: ffffd211   B mov $r2 (add $r2 0xffffffffffffffff)
0000004f: ffffd017     branz $r2 0x4e         ;     r2 = r4;
00000050: 00000101     parm $r1               ;     while(r2--) r1 = read_arg();
                                              ;   }
00000051: fffd6837   B branz annul $r5 0x46   ; }
00000052: 01438071   B maddrsend 0x50e        ; write_reg(0x50e, 0);
00000053: 0638c021     maddr 0x18e3           ; write_reg(0x8e3, 0x644);
00000054: 01910041     send 0x644             ; write_reg(0x8e4, 0);
00000055: 000000c1     exit send 0x0          ; write_reg(0x8e5, 0);
00000056: 00000041     send 0x0
